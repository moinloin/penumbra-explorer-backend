name: Deploy to Hetzner

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APP_NAME: penumbra-explorer
  SERVER_USER: deploy
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  DB_USER: penumbra
  DB_NAME: explorer

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ${{ env.APP_NAME }}:latest
          outputs: type=docker,dest=/tmp/${{ env.APP_NAME }}.tar

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          known_hosts: unnecessary

      - name: Add server to known hosts
        run: ssh-keyscan -H ${{ env.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Transfer Docker image
        run: |
          scp /tmp/${{ env.APP_NAME }}.tar ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }}:~/deployments/

      - name: Deploy application
        run: |
          ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} '
          # Load the Docker image
          docker load < ~/deployments/${{ env.APP_NAME }}.tar
          
          # Stop and remove existing container if it exists
          docker stop ${{ env.APP_NAME }} || true
          docker rm ${{ env.APP_NAME }} || true
          
          # Run the new container with command line arguments
          docker run -d \
            --name ${{ env.APP_NAME }} \
            -p 8080:8080 \
            --restart always \
            --network=host \
            ${{ env.APP_NAME }}:latest \
            /app/penumbra-explorer \
            -s "${{ secrets.SOURCE_DB_URL }}" \
            -d "postgresql://${{ env.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ env.DB_NAME }}?sslmode=disable" \
            --genesis-json /app/genesis.json
          
          # Clean up
          rm ~/deployments/${{ env.APP_NAME }}.tar
          '